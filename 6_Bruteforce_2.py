### Section6_Bruteforce_문제2: 이진트리 순회(깊이우선탐색)
'''
트리를 탐색하는 방법에는 DFS(깊이우선탐색) / BFS(너비우선탐색;레벨순으로 탐색)이 있다.
DFS(깊이우선탐색)은 3가지로 구분된다. 
- 전위순회: 루트노드 > 왼쪽자식노드 > 오른쪽자식노드
- 중위순회: 왼쪽자식노드 > 부모노드 > 오른쪽자식노드
- 후위순회: 왼쪽자식노드 > 오른쪽자식노드 > 부모노드

'''
# 전위순회 방식 DFS (대부분 경우 전위순회 사용)
def DFS(x):
    if x>7:
        return
    else:
        print(x, end=' ')    # print문이 여기있어야 전위순회하지. 자기값을 출력하고, 다음 노드로 이동
        DFS(x*2)
        DFS(x*2+1)
DFS(1)

print()
# 중위순회 방식 DFS (거의 안쓰임)
def DFS(x):
    if x>7:
        return
    else:
        DFS(x*2)
        print(x, end=' ')   # print문이 여기있으면 중위순회 (왼쪽먼저 처리하고, 부모 갔다가 오른쪽 처리)
        DFS(x*2+1)
DFS(1)

print()
# 후위순회 방식 DFS (병합정렬시 많이 사용)
def DFS(x):
    if x>7:
        return
    else:
        DFS(x*2)
        DFS(x*2+1)
        print(x, end=' ')   # print문이 여기있으면 후위순회 (왼쪽처리하고 오른쪽처리 전부 다하고, 원래 자기것으로 돌아와서 출력)
DFS(1)
'''
후위순회 스택에 쌓이는 모습:
1. D(1)-7번라인 스택에 저장 & D(2)가 스택에 저장
2. D(2)-7번라인 스택에 저장 & D(4)가 스택에 저장
3. D(4)-7번라인 스택에 저장 & D(8)가 스택에 저장
4. D(8)는 7보다 커서 return해서 종료(스택에서 pop)
5. D(4)-7번라인 스택프레임 실행 > D(4)-8번라인(까지 실행했다는) 스택프레임으로 저장 & D(9)가 스택에 저장
6. D(9)는 7보다 커서 return해서 종료(스택에서 pop)
7. D(4)-8번라인 스택프레임 실행 > print문 실행(4를 출력) & D(4)-8번라인 스택프레임 종료해서 pop
8. D(2)-7번라인 스택프레임 실행 > D(2)-8번라인 스택프레임으로 저장 & D(5)가 스택에 저장
9. D(5)는 D(10), D(11)둘다 return당해서 pop된다 >>> 결국 D(5)-8번라인 스택프레임 실행 > print문 실행(5를 출력)
...이런식으로 실행되면 후위순회방식이다. 
'''