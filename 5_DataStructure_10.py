### Section5_DataStructure_문제10: 최소 힙
'''
최소힙은 완전이진트리로 구현된 자료이다. 
부모노드가 왼쪽, 오른쪽 자식노드들보다 값이 작게 만들어져야한다. 
그렇게 구성된 자료구조가 최소힙이다.
- 힙을 만들때는 레벨순으로 하나씩 수를 추가하면서 바로바로 부모노드랑 비교하면서 업데이트를 한다(업힙: 계속 부모노드로 올라가면서 비교하고 자식노드가 더 작으면 부모랑 자리바꿔)
- pop을 하면, 가장 작은 값(루트노드)이 빠져나오고, 트리에서 가장 큰 값(맨 마지막 레벨의 오른쪽값)이 루트노드로 들어간후, 자식노드랑 비교하면서, 작은 놈을 위로 올린다(다운힙)
이때 자식값들중에서 더 작은 값이 부모자리로 오게 바꾼다
- push를 하면, 맨마지막 레벨에 노드하나를 추가한다. 이후, 업힙과정진행..
즉, 변화가 있을때마다 다시 최소힙을 만드는 것.
'''
import heapq
tree = []   # heapq를 쓰려면 빈 리스트 하나가 필요하다
ans = []    # 정답 담을 빈 리스트 (이거 굳이 안만들고 그냥 바로 print해도 됨)
while True:
    n = int(input())
    if n==0:
        if tree:
            ans.append(heapq.heappop(tree))
        else:
            ans.append(-1)
    elif n==-1:
        break
    else:
        heapq.heappush(tree, n)
for i in ans:
    print(i)
