### Section4_Binary_Greedy_문제2: 랜선 자르기 (결정알고리즘)
'''
<결정 알고리즘>
예시: 답은 1cm부터 n개의 랜선 중 가장 긴 길이사이에 있을 것이다.
예를들어, 1cm~1000cm사이에 답이 있다고 해보자. 
이분탐색으로 답을 구한다.
1, 1000의 중간값은 2로 나눈 몫인 500이다. 이것이 답이 될 수 있나 확인한다.
n개의 랜선들을 500으로 나눈 몫들을 구하면 답이 500이라면 총 몇개의 랜선이 만들어지나 확인가능하다.
이때 원하던 개수가 안나오면 답이 안되는 것. 만약 500으로 잘랐을때, 구해야할 개수보다 적게 나왔다면,
500보다 크게 잘라봤자 의미가 없으니까 버리고, 이분탐색으로 범위를 좁게 들어가 > 답은 1~499사이에 있을 것이다
1, 499의 중간값인 250으로 또 잘려진 랜선 수를 구해본다. 이때도 원하던 개수보다 적게나왔으면, 범위를 또 줄여야지. 
1~249사이에 답이 있을 것이다 > 이경우 중간값은 125. 125로 잘라봤더니, 원했던 개수들 이상으로 나왔다. 
답으로서 가능하므로 일단 저장, 그러나 우리가 원하는 것은 자를 수 있는 최대길이 이므로, 
126~249사이를 답의 범위로 정하고, 또 이분탐색: 중간값은 187 > 답을 187로 업데이트 > 또 188~249 범위 이분탐색...
이렇게 하다보면 가장 좋은 값이 나오며, 그게 답이다. 
'''
import sys
k,n = map(int, sys.stdin.readline().split())
line = list(int(sys.stdin.readline()) for _ in range(k))
def Count(len):
    cnt = 0
    for x in line:
        cnt += x//len
    return cnt
ans = 0
left = 1
right = max(line)
while left<=right:
    mid = (left+right)//2
    if Count(mid)>=n:
        ans = mid
        left = mid + 1
    else:
        right = mid - 1
print(ans)
